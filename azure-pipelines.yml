trigger:
  - main

pool: omkar-hcl


stages:
- stage: terraform_init_plan
  displayName: Terraform Init, Format, Validate, Plan
  jobs:
  - job: terraform_job
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'HCL-infrasc'
        backendAzureRmStorageAccountName: 'hclsa45623'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'prod.terraform.tfstate'
        workingDirectory: '$(Build.SourcesDirectory)/omkar/parent'
      displayName: Terraform Init



    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'custom'
        workingDirectory: '$(System.DefaultWorkingDirectory)/omkar/parent'
        outputTo: 'console'
        customCommand: 'fmt'
        environmentServiceNameAzureRM: 'HCL-infrasc'
        
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/omkar/parent'


    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/omkar/parent'
        environmentServiceNameAzureRM: 'HCL-infrasc'
- stage: scanning
  displayName: scanning
  jobs:
  - job: Tfsec
    condition : always () 
    displayName: Tfsec
    steps:
    - task: tfsec@1
      continueOnError: true
      inputs:
        version: 'v1.26.0'
        debug: true
        args: '--tfvars-file="environments\dev\terraform.tfvars'
        dir: '$(System.DefaultWorkingDirectory)/omkar/parent'
  - job: Checkov
    condition: Always()
    displayName: Checkov 
    steps:
    - task: UsePythonVersion@0
      displayName: 'Set up Python'
      inputs:
        versionSpec: '3.x'

    - script: |
        pip install checkov
      displayName: 'Install Checkov'
    - task: CmdLine@2
      condition: Always()
      displayName: Checkov
      inputs:
        script: 'checkov -d ./omkar -o junitxml > checkovresult.xml'
        workingDirectory: '$(System.DefaultWorkingDirectory)/omkar/parent'
    - task: PublishTestResults@2
      condition: Always()
      displayName: Publish Result
      inputs:
       testResultsFormat: 'JUnit'
       testResultsFiles: '*.xml'
       searchFolder: '$(System.DefaultWorkingDirectory)/omkar/parent'
       testRunTitle: 'checov'
    



        
    
     


        
       

    